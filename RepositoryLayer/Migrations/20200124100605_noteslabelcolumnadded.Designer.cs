// <auto-generated />
using System;
using FundooRepositoryLayer.ModelDB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FundooRepositoryLayer.Migrations
{
    [DbContext(typeof(UserContext))]
    [Migration("20200124100605_noteslabelcolumnadded")]
    partial class noteslabelcolumnadded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CommonLayer.Model.UserDetails", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime>("IsCreated");

                    b.Property<DateTime>("IsModified");

                    b.Property<string>("LastName");

                    b.Property<string>("Password");

                    b.Property<string>("Type");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FundooCommonLayer.Model.LabelModel", b =>
                {
                    b.Property<int>("LabelID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("IsCreated");

                    b.Property<DateTime>("IsModified");

                    b.Property<string>("LabelName");

                    b.Property<int>("UserId");

                    b.HasKey("LabelID");

                    b.ToTable("label");
                });

            modelBuilder.Entity("FundooCommonLayer.Model.NotesDB", b =>
                {
                    b.Property<int>("NoteID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color");

                    b.Property<string>("Description");

                    b.Property<string>("Image");

                    b.Property<bool>("IsArchive");

                    b.Property<DateTime>("IsCreated");

                    b.Property<DateTime>("IsModified");

                    b.Property<bool>("IsPin");

                    b.Property<bool>("IsTrash");

                    b.Property<DateTime>("Reminder");

                    b.Property<string>("Title");

                    b.Property<int>("UserId");

                    b.HasKey("NoteID");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("FundooCommonLayer.Model.Noteslabel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LabelID");

                    b.Property<int>("NoteID");

                    b.HasKey("ID");

                    b.ToTable("Noteslabels");
                });
#pragma warning restore 612, 618
        }
    }
}
